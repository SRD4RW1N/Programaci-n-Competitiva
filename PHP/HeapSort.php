<?php

function heapSort($vector) {
    $primero = $vector[0];
    $n = count($vector);
    $pasos = 0;
    // Construir un Max-Heap
    $start = hrtime(true);
    for ($i = intdiv($n, 2) - 1; $i >= 0; $i--) {
        // Llamada a heapify en cada nodo no hoja
        $raiz = $i;
        while ($raiz * 2 + 1 < $n) {
            $hijo = $raiz * 2 + 1;
            if ($hijo + 1 < $n && $vector[$hijo] < $vector[$hijo + 1]) {
                $hijo += 1;
            }
            if ($vector[$raiz] < $vector[$hijo]) {
                $temp = $vector[$raiz];
                $vector[$raiz] = $vector[$hijo];
                $vector[$hijo] = $temp;
                $raiz = $hijo;
            } else {
                break;
            }
        }
    }
    // Extraer elementos uno por uno desde el heap
    for ($i = $n - 1; $i > 0; $i--) {
        $temp = $vector[0];
        $vector[0] = $vector[$i];
        $vector[$i] = $temp;
        $pasos += 1;
        // Llamada a heapify en el heap reducido
        $raiz = 0;
        while ($raiz * 2 + 1 < $i) {
            $hijo = $raiz * 2 + 1;
            if ($hijo + 1 < $i && $vector[$hijo] < $vector[$hijo + 1]) {
                $hijo += 1;
            }
            if ($vector[$raiz] < $vector[$hijo]) {
                $temp = $vector[$raiz];
                $vector[$raiz] = $vector[$hijo];
                $vector[$hijo] = $temp;
                $raiz = $hijo;
            } else {
                break;
            }
        }
        $run_time = hrtime(true) - $start;
    }
    echo "Vector Ordenado:\n";
    print_r($vector);
    echo "Pasos:" . $pasos . "\n";
    // Busqueda binaria para encontrar el tiempo en buscar el primero
    $found = false;
    $first = 0;
    $last = count($vector) - 1;
    $start2 = hrtime(true);
    while (!$found && $first <= $last) {
        $middle = intdiv($first + $last, 2);
        if ($vector[$middle] == $primero) {
            $found = true;
            $end2 = hrtime(true);
        } elseif ($vector[$middle] > $primero) {
            $last = $middle - 1;
        } else {
            $first = $middle + 1;
        }
    }
    $fet = $end2 - $start2;
    echo "Tiempo en encontrar el primero: " . $fet . "ms\ntiempo de ejecucion: " . $run_time . "ms\n";
}
$vector1 = array(19, 61, 29, 89, 7, 97, 56, 87, 5, 41, 46, 67, 98, 32, 13, 44, 6, 20, 24, 42, 73, 91, 53, 64, 78, 22, 90, 45, 54, 77, 96, 88, 50, 36, 37, 71, 57, 81, 55, 3, 25, 39, 49, 99, 35, 51, 1, 69, 43, 58);
$vector2 = array(3, 1, 5, 7, 6, 13, 20, 19, 22, 24, 29, 25, 32, 35, 39, 37, 36, 41, 43, 42, 44, 50, 46, 49, 45, 51, 53, 54, 57, 56, 55, 58, 61, 67, 64, 69, 71, 81, 77, 78, 73, 87, 99, 88, 89, 91, 90, 96, 97, 98);
$vector3 = array(99, 98, 97, 96, 91, 90, 89, 88, 87, 81, 78, 77, 73, 71, 69, 67, 64, 61, 58, 57, 56, 55, 54, 53, 51, 50, 49, 46, 45, 44, 43, 42, 41, 39, 37, 36, 35, 32, 29, 25, 24, 22, 20, 19, 13, 7, 6, 5, 3, 1);
$vector4 = array(19, 99, 29, 89, 19, 99, 56, 57, 29, 41, 19, 67, 99, 99, 29, 57, 6, 20, 19, 42, 73, 91, 29, 99, 29, 22, 90, 19, 53, 77, 57, 29, 29, 36, 36, 57, 19, 99, 29, 3, 29, 39, 57, 99, 19, 99, 1, 29, 42, 57);
$vector5 = array(510352967, 2907679935, 2864974543, 7790782874, 4184822826, 6926839460, 3900067661, 489436643, 1104481795, 6503036989, 99921813, 4374167399, 8641202083, 5694233226, 3366512560, 7456991239, 575366360, 7608480313, 7161451542, 8146629571, 1019011129, 6869674629, 6957315622, 2895785084, 7419725730, 134069275, 2639968810, 4173295587, 2747697518, 4051903029, 6585869210, 3868598239, 5371677739, 6514025047, 1629282014, 51292056, 5638748639, 3118330940, 4114751572, 609298200, 1184638678, 1620522670, 5172256601, 2367863072, 6479080646, 2724768035, 8010815376, 1279467748, 3619492706, 7567524934);
$vector6 = array(51292056, 134069275, 99921813, 510352967, 489436643, 575366360, 1184638678, 609298200, 2367863072, 1629282014, 2864974543, 1104481795, 1620522670, 1019011129, 1279467748, 2724768035, 2747697518, 4051903029, 2895785084, 6869674629, 7419725730, 2639968810, 3900067661, 2907679935, 5172256601, 3118330940, 5371677739, 6926839460, 3366512560, 3868598239, 4114751572, 4173295587, 3619492706, 4184822826, 4374167399, 6479080646, 5638748639, 6957315622, 5694233226, 7790782874, 8146629571, 8010815376, 8641202083, 6503036989, 6514025047, 7161451542, 7567524934, 6585869210, 7608480313, 7456991239);
$vector7 = array(8641202083, 8146629571, 8010815376, 7790782874, 7608480313, 7567524934, 7456991239, 7419725730, 7161451542, 6957315622, 6926839460, 6869674629, 6585869210, 6514025047, 6503036989, 6479080646, 5694233226, 5638748639, 5371677739, 5172256601, 4374167399, 4184822826, 4173295587, 4114751572, 4051903029, 3900067661, 3868598239, 3619492706, 3366512560, 3118330940, 2907679935, 2895785084, 2864974543, 2747697518, 2724768035, 2639968810, 2367863072, 1629282014, 1620522670, 1279467748, 1184638678, 1104481795, 1019011129, 609298200, 575366360, 510352967, 489436643, 134069275, 99921813, 51292056);
$vector8 = array(99921813, 4114751572, 489436643, 7790782874, 4184822826, 8146629571, 489436643, 489436643, 99921813, 8146629571, 99921813, 4374167399, 8641202083, 8146629571, 3366512560, 4114751572, 575366360, 7608480313, 4184822826, 8146629571, 4184822826, 6869674629, 4114751572, 1019011129, 4184822826, 134069275, 2639968810, 4173295587, 1019011129, 4051903029, 4114751572, 3868598239, 4114751572, 4114751572, 1019011129, 51292056, 4184822826, 489436643, 4114751572, 99921813, 1184638678, 4184822826, 4114751572, 489436643, 4184822826, 489436643, 4114751572, 99921813, 1019011129, 4114751572);

// Ejemplo de uso
$vector = $vector2;
heapSort($vector);

?>